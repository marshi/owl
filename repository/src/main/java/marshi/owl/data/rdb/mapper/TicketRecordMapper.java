package marshi.owl.data.rdb.mapper;

import java.util.List;
import marshi.owl.data.rdb.entity.TicketRecord;
import marshi.owl.data.rdb.entity.TicketRecordExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TicketRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @SelectProvider(type=TicketRecordSqlProvider.class, method="countByExample")
    int countByExample(TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TicketRecordSqlProvider.class, method="deleteByExample")
    int deleteByExample(TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ticket",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ticket (id, project_id, ",
        "title, assignee_id, ",
        "deadline, content)",
        "values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, ",
        "#{title,jdbcType=VARCHAR}, #{assigneeId,jdbcType=INTEGER}, ",
        "#{deadline,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=true, resultType=Long.class)
    int insert(TicketRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @InsertProvider(type=TicketRecordSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=true, resultType=Long.class)
    int insertSelective(TicketRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @SelectProvider(type=TicketRecordSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="project_id", property="projectId", jdbcType=JdbcType.BIGINT),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="assignee_id", property="assigneeId", jdbcType=JdbcType.INTEGER),
        @Result(column="deadline", property="deadline", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<TicketRecord> selectByExampleWithBLOBs(TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @SelectProvider(type=TicketRecordSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="project_id", property="projectId", jdbcType=JdbcType.BIGINT),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="assignee_id", property="assigneeId", jdbcType=JdbcType.INTEGER),
        @Result(column="deadline", property="deadline", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TicketRecord> selectByExample(TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, project_id, title, assignee_id, deadline, content",
        "from ticket",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="project_id", property="projectId", jdbcType=JdbcType.BIGINT),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="assignee_id", property="assigneeId", jdbcType=JdbcType.INTEGER),
        @Result(column="deadline", property="deadline", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    TicketRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TicketRecordSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TicketRecord record, @Param("example") TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TicketRecordSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") TicketRecord record, @Param("example") TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TicketRecordSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TicketRecord record, @Param("example") TicketRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TicketRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TicketRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @Update({
        "update ticket",
        "set project_id = #{projectId,jdbcType=BIGINT},",
          "title = #{title,jdbcType=VARCHAR},",
          "assignee_id = #{assigneeId,jdbcType=INTEGER},",
          "deadline = #{deadline,jdbcType=TIMESTAMP},",
          "content = #{content,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(TicketRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    @Update({
        "update ticket",
        "set project_id = #{projectId,jdbcType=BIGINT},",
          "title = #{title,jdbcType=VARCHAR},",
          "assignee_id = #{assigneeId,jdbcType=INTEGER},",
          "deadline = #{deadline,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TicketRecord record);
}